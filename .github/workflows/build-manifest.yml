name: Build photo manifest
permissions:
  contents: write

on:
  push:
    paths:
      - 'img/originals/**.jpg'
      - 'img/originals/**.jpeg'
      - 'img/*-640.jpg'
      - 'img/*-1280.jpg'
      - 'img/*-2560.jpg'
      - '.github/workflows/build-manifest.yml'

jobs:
  manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # (Ubuntu runners usually have ImageMagick; this keeps us safe.)
      - name: Ensure ImageMagick is available
        run: |
          if ! command -v convert >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y imagemagick
          fi

      - name: Resize originals into 640/1280/2560
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob nocaseglob
          mkdir -p img img/originals

          for f in img/originals/*.{jpg,jpeg,JPG,JPEG}; do
            [ -e "$f" ] || continue
            base="$(basename "${f%.*}")"

            # Generate sizes only if missing; keep aspect ratio, auto-orient, strip EXIF
            for size in 640 1280 2560; do
              out="img/${base}-${size}.jpg"
              if [[ ! -f "$out" ]]; then
                convert "$f" -auto-orient -strip -resize "${size}x${size}\>" -quality 88 "$out"
                echo "Wrote $out"
              fi
            done
          done

      - name: Build img/photos.json from resized images
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob

          # collect unique basenames that have all 3 sizes
          mapfile -t BASENAMES < <(ls img/*-640.jpg 2>/dev/null | sed 's@.*/@@;s@-640\.jpg$@@' | sort -u)

          echo "[" > img/photos.json
          first=1
          for b in "${BASENAMES[@]}"; do
            if [[ -f "img/${b}-1280.jpg" && -f "img/${b}-2560.jpg" ]]; then
              [[ $first -eq 0 ]] && echo "," >> img/photos.json
              first=0

              # defaults (you can make these prettier later)
              TITLE="$b"
              OVERLAY="$b"
              ALT="$b"

              printf '  {"base":"%s","title":"%s","overlay":"%s","alt":"%s"}' \
                "$b" "$TITLE" "$OVERLAY" "$ALT" >> img/photos.json
            fi
          done
          echo "" >> img/photos.json
          echo "]" >> img/photos.json

      - name: Commit resized images + manifest
        run: |
          git config user.name "
