name: Build photo manifest

on:
  push:
    paths:
      - 'img/originals/**'
      - '.github/workflows/build-manifest.yml'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: build-manifest
  cancel-in-progress: false

jobs:
  manifest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure ImageMagick is available
        shell: bash
        run: |
          set -e
          if ! command -v convert >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y imagemagick
          fi
          convert -version

      - name: Resize originals into 640/1280/2560
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob nocaseglob
          mkdir -p img img/originals

          for f in img/originals/*.{jpg,jpeg,JPG,JPEG}; do
            [ -e "$f" ] || continue
            stem="$(basename "${f%.*}")"
            for size in 640 1280 2560; do
              out="img/${stem}-${size}.jpg"
              if [[ ! -f "$out" ]]; then
                # Keep aspect ratio, only downscale, strip EXIF
                convert "$f" -auto-orient -strip -resize "${size}x${size}\>" -quality 88 "$out"
                echo "Wrote $out"
              fi
            done
          done

      - name: Build img/photos.json from resized images
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          mapfile -t BASENAMES < <(ls img/*-640.jpg 2>/dev/null | sed 's@.*/@@;s@-640\.jpg$@@' | sort -u)

          printf "[\n" > img/photos.json
          first=1
          for b in "${BASENAMES[@]}"; do
            if [[ -f "img/${b}-1280.jpg" && -f "img/${b}-2560.jpg" ]]; then
              [[ $first -eq 1 ]] || printf ",\n" >> img/photos.json
              first=0
              # Safe defaults; you can handâ€‘edit later
              printf '  {"base":"%s","title":"%s","overlay":"%s","alt":"%s"}' "$b" "$b" "$b" "$b" >> img/photos.json
            fi
          done
          printf "\n]\n" >> img/photos.json
          echo "Generated img/photos.json:"
          cat img/photos.json

      - name: Commit resized images + manifest
        shell: bash
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add img
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore: resized images & updated manifest"
            git push
          fi
